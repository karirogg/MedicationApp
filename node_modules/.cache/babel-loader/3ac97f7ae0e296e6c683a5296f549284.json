{"ast":null,"code":"var _jsxFileName = \"/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js\";\nimport React, { Component } from 'react';\nimport '../CSS/AddWindow.css';\nimport { addMeds } from '../Actions/add-meds-action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport NewDose from './NewDose';\n\nclass AddWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      doses: [{\n        amount: \"75mg\",\n        hour: \"00\",\n        minute: \"00\",\n        ind: 0\n      }]\n    };\n\n    this.formatDate = num => {\n      if (num < 10) return \"0\" + String(num);\n      return \"\" + num;\n    };\n\n    this.hr_up = i => {\n      console.log(i);\n      console.log(JSON.stringify(this.state.doses[i]));\n      let hr = parseInt(this.state.doses[i].hour);\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      hr++;\n      if (hr > 23) hr = 0;\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.hr_down = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      if (this.state.hour === \"\") hr = 0;\n      hr--;\n      if (hr < 0) hr = 23;\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.min_up = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      let min = parseInt(this.state.doses[i].minute);\n      if (this.state.doses[i].minute === \"\") min = 0;\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      min += 30;\n\n      if (min >= 60) {\n        min = 0;\n        hr++;\n        if (hr > 23) hr = 0;\n      }\n\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].minute = this.formatDate(min);\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.min_down = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      let min = parseInt(this.state.doses[i].minute);\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      if (this.state.doses[i].minute === \"\") min = 0;\n      min -= 30;\n\n      if (min < 0) {\n        min = 30;\n        hr--;\n        if (hr < 0) hr = 23;\n      }\n\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].minute = this.formatDate(min);\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.hourEdited = (event, i) => {\n      let newValue = event.target.value;\n\n      if (newValue.length <= 2) {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = newValue.replace(/[^0-9]+/g, \"\");\n        this.setState(state_copy);\n      }\n    };\n\n    this.minuteEdited = (event, i) => {\n      let newValue = event.target.value;\n\n      if (newValue.length <= 2) {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = newValue.replace(/[^0-9]+/g, \"\");\n        this.setState(state_copy);\n      }\n    };\n\n    this.submitMeds = () => {\n      var submit_name = this.refs.name_input.value;\n      var amount_name = this.refs.amount_input.value;\n\n      if (submit_name && amount_name) {\n        this.props.toggle();\n        this.props.addMeds({\n          name: submit_name,\n          amount: amount_name\n        });\n      } else {\n        alert(\"You cannot add empty medication\");\n      }\n    };\n\n    this.addDose = () => {\n      this.setState({\n        doses: [...this.state.doses, {\n          amount: \"\",\n          hour: \"00\",\n          minute: \"00\"\n        }]\n      });\n    };\n\n    this.hour_fields = [];\n    this.minute_fields = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dim-background\",\n      onClick: this.props.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 42\n      }\n    }, \"B\\xE6ta vi\\xF0 lyfjagj\\xF6f\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"name_input\",\n      placeholder: \"Nafn lyfs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"amount_input\",\n      placeholder: \"Amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-dose\",\n      onClick: this.addDose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"N\\xFDr skammtur\"), this.state.doses.map((dose, i) => {\n      console.log(i);\n      return /*#__PURE__*/React.createElement(NewDose, {\n        key: i,\n        dose: dose,\n        hr_up: this.hr_up,\n        hr_down: this.hr_down,\n        min_up: this.min_up,\n        min_down: this.min_down,\n        minuteEdited: this.minuteEdited,\n        hourEdited: this.hourEdited,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 32\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save\",\n      type: \"submit\",\n      onClick: this.submitMeds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Vista\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addMeds: addMeds\n  }, dispatch);\n}\n\nexport default connect(null, matchDispatchToProps)(AddWindow);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js"],"names":["React","Component","addMeds","bindActionCreators","connect","NewDose","AddWindow","constructor","state","doses","amount","hour","minute","ind","formatDate","num","String","hr_up","i","console","log","JSON","stringify","hr","parseInt","state_copy","parse","setState","hr_down","min_up","min","min_down","hourEdited","event","newValue","target","value","length","replace","minuteEdited","submitMeds","submit_name","refs","name_input","amount_name","amount_input","props","toggle","name","alert","addDose","hour_fields","minute_fields","render","map","dose","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../CSS/AddWindow.css';\nimport {addMeds} from '../Actions/add-meds-action';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport NewDose from './NewDose';\n\nclass AddWindow extends Component {\n    constructor() {\n        super();\n\n        this.hour_fields = [];\n        this.minute_fields = [];\n    }\n\n    state = {\n        doses:[{amount: \"75mg\", hour:\"00\", minute:\"00\", ind: 0}]\n    };\n\n    formatDate = (num) => {\n        if(num < 10) return(\"0\" + String(num));\n        return(\"\"+num);\n    }\n    hr_up = (i) => {\n        console.log(i)\n        console.log(JSON.stringify(this.state.doses[i]));\n        let hr = parseInt(this.state.doses[i].hour);\n        if(this.state.doses[i].hour === \"\") hr = 0;\n        hr++;\n        if(hr > 23) hr = 0;\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    hr_down = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        if(this.state.hour === \"\") hr = 0;\n        hr--;\n        if(hr < 0) hr = 23;\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    min_up = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        let min = parseInt(this.state.doses[i].minute);\n        if(this.state.doses[i].minute === \"\") min = 0;\n        if(this.state.doses[i].hour === \"\") hr = 0;\n\n        min += 30;\n        if(min >= 60) {\n            min = 0;\n            hr++;\n            if(hr > 23) hr = 0;\n        }\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = this.formatDate(min);\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    min_down = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        let min = parseInt(this.state.doses[i].minute);\n        if(this.state.doses[i].hour === \"\") hr = 0;\n        if(this.state.doses[i].minute === \"\") min = 0;\n\n        min -= 30;\n        if(min < 0) {\n            min = 30;\n            hr--;\n            if(hr < 0) hr = 23;\n        }\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = this.formatDate(min);\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    hourEdited = (event, i) => {\n        let newValue = event.target.value;\n\n        if(newValue.length <= 2) {\n            let state_copy = JSON.parse(JSON.stringify(this.state));\n            state_copy.doses[i].hour = newValue.replace(/[^0-9]+/g, \"\");\n            this.setState(state_copy);\n        } \n    }\n    minuteEdited = (event, i) => {\n        let newValue = event.target.value;\n\n        if(newValue.length <= 2) {\n            let state_copy = JSON.parse(JSON.stringify(this.state));\n            state_copy.doses[i].minute = newValue.replace(/[^0-9]+/g, \"\");\n            this.setState(state_copy);\n        }\n    }\n\n    submitMeds = () => {\n        var submit_name = this.refs.name_input.value;\n        var amount_name = this.refs.amount_input.value;\n\n        if(submit_name && amount_name) {\n            this.props.toggle();\n            this.props.addMeds({                    \n                name: submit_name,                \n                amount: amount_name,\n            });\n        } else {\n            alert(\"You cannot add empty medication\");\n        }\n    }\n    addDose = () => {\n        this.setState({doses: [...this.state.doses, {amount:\"\", hour:\"00\", minute:\"00\"}]});\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='dim-background' onClick={this.props.toggle}></div>\n                <div className='add-window'>\n                    <div className=\"top\"><p>Bæta við lyfjagjöf</p></div>\n                    <input type=\"text\" ref=\"name_input\" placeholder=\"Nafn lyfs\" />\n                    <input type=\"text\" ref=\"amount_input\" placeholder=\"Amount\" />\n                    <button className=\"add-dose\" onClick={this.addDose}>Nýr skammtur</button>\n                    {this.state.doses.map((dose, i) => {\n                        console.log(i);\n                        return(<NewDose key={i} dose={dose} hr_up={this.hr_up} hr_down={this.hr_down} min_up={this.min_up} min_down={this.min_down} minuteEdited={this.minuteEdited} hourEdited={this.hourEdited} />);\n                    })}\n                    <button className=\"save\" type=\"submit\" onClick={this.submitMeds}>Vista</button>\n                    <p className=\"error_message\"></p>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction matchDispatchToProps(dispatch) {\n    return bindActionCreators({addMeds: addMeds}, dispatch);\n}\n\n\nexport default connect(null, matchDispatchToProps)(AddWindow);"]},"metadata":{},"sourceType":"module"}