{"ast":null,"code":"var _jsxFileName = \"/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js\";\nimport React, { Component } from 'react';\nimport '../CSS/AddWindow.css';\nimport { addMeds } from '../Actions/add-meds-action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport NewDose from './NewDose';\n\nclass AddWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      doses: [{\n        amount: \"75mg\",\n        hour: \"09\",\n        minute: \"00\",\n        ind: 0\n      }]\n    };\n\n    this.formatDate = num => {\n      if (String(num).length === 1) return \"0\" + String(num);\n      if (num === \"\") return \"00\";\n      return \"\" + num;\n    };\n\n    this.hr_up = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      hr++;\n      if (hr > 23) hr = 0;\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.hr_down = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      if (this.state.hour === \"\") hr = 0;\n      hr--;\n      if (hr < 0) hr = 23;\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.min_up = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      let min = parseInt(this.state.doses[i].minute);\n      if (this.state.doses[i].minute === \"\") min = 0;\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      min += 30;\n\n      if (min >= 60) {\n        min = 0;\n        hr++;\n        if (hr > 23) hr = 0;\n      }\n\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].minute = this.formatDate(min);\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.min_down = i => {\n      let hr = parseInt(this.state.doses[i].hour);\n      let min = parseInt(this.state.doses[i].minute);\n      if (this.state.doses[i].hour === \"\") hr = 0;\n      if (this.state.doses[i].minute === \"\") min = 0;\n      min -= 30;\n\n      if (min < 0) {\n        min = 30;\n        hr--;\n        if (hr < 0) hr = 23;\n      }\n\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].minute = this.formatDate(min);\n      state_copy.doses[i].hour = this.formatDate(hr);\n      this.setState(state_copy);\n    };\n\n    this.edit_minute = (value, i) => {\n      let state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].minute = value;\n      this.setState(state_copy);\n    };\n\n    this.edit_hour = (value, i) => {\n      let state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].hour = value;\n      this.setState(state_copy);\n    };\n\n    this.edit_amount = (value, i) => {\n      let state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses[i].amount = value;\n      this.setState(state_copy);\n    };\n\n    this.removeElementAtIndex = i => {\n      let state_copy = JSON.parse(JSON.stringify(this.state));\n      state_copy.doses.splice(i, 1);\n      this.setState(state_copy);\n    };\n\n    this.submitMeds = () => {\n      var submit_name = this.refs.name_input.value;\n      var state_copy = JSON.parse(JSON.stringify(this.state));\n\n      for (let i = 0; i < state_copy.doses.length; i++) {\n        console.log(this.formatDate(state_copy.doses[i].hour));\n        state_copy.doses[i].hour = this.formatDate(state_copy.doses[i].hour);\n        state_copy.doses[i].minute = this.formatDate(state_copy.doses[i].minute);\n      }\n\n      state_copy.doses.sort((a, b) => parseInt(a.hour) - parseInt(b.hour) || parseInt(a.minute) - parseInt(b.minute));\n\n      if (submit_name) {\n        this.props.toggle();\n        this.props.addMeds({\n          name: submit_name,\n          doses: state_copy.doses\n        });\n      } else {\n        alert(\"You cannot add empty medication\");\n      }\n    };\n\n    this.addDose = () => {\n      this.setState({\n        doses: [...this.state.doses, {\n          amount: \"75mg\",\n          hour: \"09\",\n          minute: \"00\"\n        }]\n      });\n    };\n\n    this.hour_fields = [];\n    this.minute_fields = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dim-background\",\n      onClick: this.props.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 42\n      }\n    }, \"B\\xE6ta vi\\xF0 lyfjagj\\xF6f\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"name-input\",\n      ref: \"name_input\",\n      placeholder: \"Nafn lyfs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), this.state.doses.map((dose, i) => {\n      return /*#__PURE__*/React.createElement(NewDose, {\n        key: i,\n        id: i,\n        dose: dose,\n        hr_up: this.hr_up,\n        hr_down: this.hr_down,\n        min_up: this.min_up,\n        min_down: this.min_down,\n        edit_minute: this.edit_minute,\n        edit_hour: this.edit_hour,\n        edit_amount: this.edit_amount,\n        removeElementAtIndex: this.removeElementAtIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 32\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-dose\",\n      onClick: this.addDose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"N\\xFDr skammtur\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save\",\n      type: \"submit\",\n      onClick: this.submitMeds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, \"Vista\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addMeds: addMeds\n  }, dispatch);\n}\n\nexport default connect(null, matchDispatchToProps)(AddWindow);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js"],"names":["React","Component","addMeds","bindActionCreators","connect","NewDose","AddWindow","constructor","state","doses","amount","hour","minute","ind","formatDate","num","String","length","hr_up","i","hr","parseInt","state_copy","JSON","parse","stringify","setState","hr_down","min_up","min","min_down","edit_minute","value","edit_hour","edit_amount","removeElementAtIndex","splice","submitMeds","submit_name","refs","name_input","console","log","sort","a","b","props","toggle","name","alert","addDose","hour_fields","minute_fields","render","map","dose","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../CSS/AddWindow.css';\nimport {addMeds} from '../Actions/add-meds-action';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport NewDose from './NewDose';\n\nclass AddWindow extends Component {\n    constructor() {\n        super();\n\n        this.hour_fields = [];\n        this.minute_fields = [];\n    }\n\n    state = {\n        doses:[{amount: \"75mg\", hour:\"09\", minute:\"00\", ind: 0}]\n    };\n\n    formatDate = (num) => {\n        if(String(num).length === 1) return(\"0\" + String(num));\n        if(num === \"\") return(\"00\");\n        return(\"\"+num);\n    }\n    hr_up = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        if(this.state.doses[i].hour === \"\") hr = 0;\n        hr++;\n        if(hr > 23) hr = 0;\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    hr_down = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        if(this.state.hour === \"\") hr = 0;\n        hr--;\n        if(hr < 0) hr = 23;\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    min_up = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        let min = parseInt(this.state.doses[i].minute);\n        if(this.state.doses[i].minute === \"\") min = 0;\n        if(this.state.doses[i].hour === \"\") hr = 0;\n\n        min += 30;\n        if(min >= 60) {\n            min = 0;\n            hr++;\n            if(hr > 23) hr = 0;\n        }\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = this.formatDate(min);\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n    min_down = (i) => {\n        let hr = parseInt(this.state.doses[i].hour);\n        let min = parseInt(this.state.doses[i].minute);\n        if(this.state.doses[i].hour === \"\") hr = 0;\n        if(this.state.doses[i].minute === \"\") min = 0;\n\n        min -= 30;\n        if(min < 0) {\n            min = 30;\n            hr--;\n            if(hr < 0) hr = 23;\n        }\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = this.formatDate(min);\n        state_copy.doses[i].hour = this.formatDate(hr);\n        this.setState(state_copy);\n    }\n\n    edit_minute = (value, i) => {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].minute = value;\n        this.setState(state_copy);\n    }\n    edit_hour = (value, i) => {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].hour = value;\n        this.setState(state_copy);\n    }\n    edit_amount = (value, i) => {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses[i].amount = value;\n        this.setState(state_copy);\n    }\n\n    removeElementAtIndex = (i) => {\n        let state_copy = JSON.parse(JSON.stringify(this.state));\n        state_copy.doses.splice(i, 1);\n        this.setState(state_copy);\n    }\n\n    submitMeds = () => {\n        var submit_name = this.refs.name_input.value;\n        var state_copy = JSON.parse(JSON.stringify(this.state));\n        for(let i = 0; i< state_copy.doses.length; i++) {\n            console.log(this.formatDate(state_copy.doses[i].hour));\n            state_copy.doses[i].hour = this.formatDate(state_copy.doses[i].hour);\n            state_copy.doses[i].minute = this.formatDate(state_copy.doses[i].minute);\n        }\n\n        state_copy.doses.sort((a,b) => (parseInt(a.hour) - parseInt(b.hour) || parseInt(a.minute)-parseInt(b.minute)));\n\n        if(submit_name) {\n            this.props.toggle();\n            this.props.addMeds({                    \n                name: submit_name,                \n                doses: state_copy.doses,\n            });\n        } else {\n            alert(\"You cannot add empty medication\");\n        }\n    }\n    addDose = () => {\n        this.setState({doses: [...this.state.doses, {amount:\"75mg\", hour:\"09\", minute:\"00\"}]});\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='dim-background' onClick={this.props.toggle}></div>\n                <div className='add-window'>\n                    <div className=\"top\"><p>Bæta við lyfjagjöf</p></div>\n                    <input type=\"text\" className=\"name-input\" ref=\"name_input\" placeholder=\"Nafn lyfs\" />\n                    {this.state.doses.map((dose, i) => {\n                        return(<NewDose key={i} id={i} dose={dose} hr_up={this.hr_up} hr_down={this.hr_down} min_up={this.min_up} min_down={this.min_down} edit_minute={this.edit_minute} edit_hour={this.edit_hour} edit_amount={this.edit_amount} removeElementAtIndex={this.removeElementAtIndex} />);\n                    })}\n                    <div className=\"button-holder\">\n                        <button className=\"add-dose\" onClick={this.addDose}>Nýr skammtur</button>\n                        <button className=\"save\" type=\"submit\" onClick={this.submitMeds}>Vista</button>\n                    </div>\n                    <p className=\"error_message\"></p>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction matchDispatchToProps(dispatch) {\n    return bindActionCreators({addMeds: addMeds}, dispatch);\n}\n\n\nexport default connect(null, matchDispatchToProps)(AddWindow);"]},"metadata":{},"sourceType":"module"}