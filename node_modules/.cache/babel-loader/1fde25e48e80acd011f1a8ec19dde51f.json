{"ast":null,"code":"var _jsxFileName = \"/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/MedsTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../CSS/Info.css';\n\nclass MedsTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatDate = num => {\n      if (num < 10) return \"0\" + String(num);\n      return \"\" + num;\n    };\n\n    this.summarizeAmounts = doses => {\n      for (let i = 0; i < doses.length; i++) {}\n    };\n  }\n\n  render() {\n    const timeLabels = [];\n    let k = 0;\n\n    for (let i = 0; i < 24; i++) {\n      timeLabels.push( /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, i + \":00\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"medication-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, \"Nafn\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, \"Magn\"), timeLabels)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, this.props.meds ? this.props.meds.map((med, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }, med.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }\n      }, summarizeAmounts(med.doses)), timeLabels.map((time, i) => {\n        let value = \"\";\n\n        if (this.props.meds[0].doses[k] && parseInt(this.props.meds[0].doses[k].hour) === i) {\n          value = this.props.meds[0].doses[k].amount;\n          k++;\n        }\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 48\n          }\n        }, value);\n      }));\n    }) : null)));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    meds: state.meds\n  };\n}\n\nexport default connect(mapStateToProps)(MedsTable);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/MedsTable.js"],"names":["React","Component","connect","MedsTable","formatDate","num","String","summarizeAmounts","doses","i","length","render","timeLabels","k","push","props","id","meds","map","med","name","time","value","parseInt","hour","amount","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../CSS/Info.css';\n\nclass MedsTable extends Component {\n    formatDate = (num) => {\n        if(num < 10) return(\"0\" + String(num));\n        return(\"\"+num);\n    }\n\n    summarizeAmounts = (doses) => {\n        for(let i = 0; i<doses.length; i++) {\n\n        }\n    }\n\n    render() {\n        const timeLabels = [];\n        let k = 0;\n\n        for(let i = 0; i<24; i++) {\n            timeLabels.push(<th>{i + \":00\"}</th>);\n        }\n        return(<div key={this.props.id}>\n                <table className=\"medication-info\">\n                    <thead>\n                        <tr>\n                            <th>Nafn</th>\n                            <th>Magn</th>\n                            {timeLabels}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.meds ? this.props.meds.map((med, i) => {\n                            return(<tr key={i}>\n                                    <td key={i}>{med.name}</td>\n                                    <td>{summarizeAmounts(med.doses)}</td>\n                                    {timeLabels.map((time, i) => {\n                                        let value = \"\";\n                                        if (this.props.meds[0].doses[k] && parseInt(this.props.meds[0].doses[k].hour) === i) {\n                                            value = this.props.meds[0].doses[k].amount;\n                                            k++;\n                                        }\n                                        return(<td>{value}</td>);\n                                    })}\n                                </tr>);\n                        }) : null}\n                    </tbody>\n                </table>\n            </div>);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {meds: state.meds};\n}\n\nexport default connect(mapStateToProps)(MedsTable);"]},"metadata":{},"sourceType":"module"}