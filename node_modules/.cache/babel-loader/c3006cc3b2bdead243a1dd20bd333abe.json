{"ast":null,"code":"var _jsxFileName = \"/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/MedsTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../CSS/Info.css';\n\nclass MedsTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatDate = num => {\n      if (num < 10) return \"0\" + String(num);\n      return \"\" + num;\n    };\n  }\n\n  render() {\n    const timeLabels = [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\"];\n    let k = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"medication-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }\n    }, \"Amount\"), timeLabels)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, this.props.meds ? this.props.meds.map((med, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }\n      }, med.name), this.timeLabels.map((time, i) => {\n        let value = \"\";\n\n        if (this.props.meds.doses[k].hour === i + 1) {\n          value = this.props.meds.doses[k].amount;\n          k++;\n        }\n\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 48\n          }\n        }, value);\n      }));\n    }) : null)));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    meds: state.meds\n  };\n}\n\nexport default connect(mapStateToProps)(MedsTable);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/MedsTable.js"],"names":["React","Component","connect","MedsTable","formatDate","num","String","render","timeLabels","k","props","id","meds","map","med","i","name","time","value","doses","hour","amount","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAC9BG,UAD8B,GAChBC,GAAD,IAAS;AAClB,UAAGA,GAAG,GAAG,EAAT,EAAa,OAAO,MAAMC,MAAM,CAACD,GAAD,CAAnB;AACb,aAAO,KAAGA,GAAV;AACH,KAJ6B;AAAA;;AAM9BE,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA2B,OAA3B,EAAmC,OAAnC,EAA2C,OAA3C,EAAoD,OAApD,CAAnB;AACA,QAAIC,CAAC,GAAG,CAAR;AAEA,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKH,UAHL,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKE,KAAL,CAAWE,IAAX,GAAkB,KAAKF,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/C,0BAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,GAAG,CAACE,IAAjB,CADD,EAEE,KAAKR,UAAL,CAAgBK,GAAhB,CAAoB,CAACI,IAAD,EAAOF,CAAP,KAAa;AAC9B,YAAIG,KAAK,GAAG,EAAZ;;AACA,YAAI,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,KAAhB,CAAsBV,CAAtB,EAAyBW,IAAzB,KAAkCL,CAAC,GAAC,CAAxC,EAA2C;AACvCG,UAAAA,KAAK,GAAG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,KAAhB,CAAsBV,CAAtB,EAAyBY,MAAjC;AACAZ,UAAAA,CAAC;AACJ;;AACD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKS,KAAL,CAAP;AACH,OAPA,CAFF,CAAP;AAWH,KAZkB,CAAlB,GAYI,IAbT,CARJ,CADD,CAAP;AA0BH;;AApC6B;;AAuClC,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AAACX,IAAAA,IAAI,EAAEW,KAAK,CAACX;AAAb,GAAP;AACH;;AAED,eAAeV,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,SAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../CSS/Info.css';\n\nclass MedsTable extends Component {\n    formatDate = (num) => {\n        if(num < 10) return(\"0\" + String(num));\n        return(\"\"+num);\n    }\n\n    render() {\n        const timeLabels = [\"00:00\", \"01:00\", \"02:00\",\"03:00\",\"04:00\",\"05:00\", \"06:00\"];\n        let k = 0;\n\n        return(<div key={this.props.id}>\n                <table className=\"medication-info\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Amount</th>\n                            {timeLabels}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.meds ? this.props.meds.map((med, i) => {\n                            return(<tr key={i}>\n                                    <td key={i}>{med.name}</td>\n                                    {this.timeLabels.map((time, i) => {\n                                        let value = \"\";\n                                        if (this.props.meds.doses[k].hour === i+1) {\n                                            value = this.props.meds.doses[k].amount;\n                                            k++;\n                                        }\n                                        return(<td>{value}</td>);\n                                    })}\n                                </tr>);\n                        }) : null}\n                    </tbody>\n                </table>\n            </div>);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {meds: state.meds};\n}\n\nexport default connect(mapStateToProps)(MedsTable);"]},"metadata":{},"sourceType":"module"}