{"ast":null,"code":"import _classCallCheck from\"/Users/bollo/Documents/Kari/Forritun/MedicationApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bollo/Documents/Kari/Forritun/MedicationApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bollo/Documents/Kari/Forritun/MedicationApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bollo/Documents/Kari/Forritun/MedicationApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import'../CSS/Info.css';var MedsTable=/*#__PURE__*/function(_Component){_inherits(MedsTable,_Component);var _super=_createSuper(MedsTable);function MedsTable(){var _this;_classCallCheck(this,MedsTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.formatDate=function(num){if(parseInt(num)<10)return\"0\"+String(num);return\"\"+num;};_this.relevantTimelabels=function(){var relevant=[];var timeLabels=[];for(var i=0;i<24;i++){timeLabels.push(_this.formatDate(i)+\":00\");timeLabels.push(_this.formatDate(i)+\":30\");}outer:for(var _i=0;_i<48;_i++){for(var j=0;j<_this.props.meds.length;j++){for(var k=0;k<_this.props.meds[j].doses.length;k++){if(parseInt(_this.props.meds[j].doses[k].hour)===Math.floor(_i/2)&&parseInt(_this.props.meds[j].doses[k].minute)===30*(_i%2)){relevant.push(timeLabels[_i]);continue outer;}}}}return relevant;};_this.summarizeAmounts=function(doses){var count=[];for(var i=0;i<doses.length;i++){var included=false;for(var j=0;j<count.length;j++){if(count[j].amount===doses[i].amount){count[j].total++;}}if(included===false){count.push({amount:doses[i].amount,total:1});}}var s=\"\";for(var _i2=0;_i2<count.length;_i2++){if(_i2>0)s+=\" + \";s+=count[_i2].total+\"x\"+count[_i2].amount;}return s;};return _this;}_createClass(MedsTable,[{key:\"render\",value:function render(){var _this2=this;var timeLabels=this.relevantTimelabels();return/*#__PURE__*/React.createElement(\"div\",{key:this.props.id},/*#__PURE__*/React.createElement(\"table\",{className:\"medication-info\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,timeLabels.length>0?/*#__PURE__*/React.createElement(\"th\",null,\"Nafn\"):null,timeLabels.length>0?/*#__PURE__*/React.createElement(\"th\",null,\"Magn\"):null,timeLabels.map(function(time){return/*#__PURE__*/React.createElement(\"th\",null,time);}))),/*#__PURE__*/React.createElement(\"tbody\",null,this.props.meds?this.props.meds.map(function(med,i){var k=0;return/*#__PURE__*/React.createElement(\"tr\",{onClick:function onClick(){return _this2.props.toggleAdd(_this2.props.meds[i],i);},key:i},/*#__PURE__*/React.createElement(\"td\",{key:i},med.name),/*#__PURE__*/React.createElement(\"td\",null,_this2.summarizeAmounts(med.doses)),timeLabels.map(function(time,j){var value=\"\";console.log(JSON.stringify(_this2.props.meds[i]));var dose=_this2.props.meds[i].doses[k];if(dose&&dose.hour+\":\"+dose.minute===time){value=_this2.props.meds[i].doses[k].amount;k++;}return/*#__PURE__*/React.createElement(\"td\",null,value);}));}):null)));}}]);return MedsTable;}(Component);function mapStateToProps(state){return{meds:state.meds};}export default connect(mapStateToProps)(MedsTable);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/MedsTable.js"],"names":["React","Component","connect","MedsTable","formatDate","num","parseInt","String","relevantTimelabels","relevant","timeLabels","i","push","outer","j","props","meds","length","k","doses","hour","Math","floor","minute","summarizeAmounts","count","included","amount","total","s","id","map","time","med","toggleAdd","name","value","console","log","JSON","stringify","dose","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../CSS/Info.css';\n\nclass MedsTable extends Component {\n    formatDate = (num) => {\n        if(parseInt(num) < 10) return(\"0\" + String(num));\n        return(\"\"+num);\n    }\n    // Needs optimizing, think about sorting etc.\n    relevantTimelabels = () => {\n        let relevant = [];\n        const timeLabels = [];\n\n        for(let i = 0; i<24; i++) {\n            timeLabels.push(this.formatDate(i) + \":00\");\n            timeLabels.push(this.formatDate(i) + \":30\");\n        }\n\n        outer:\n        for(let i = 0; i < 48; i++) {\n            for(let j = 0; j<this.props.meds.length; j++) {\n                for(let k = 0; k<this.props.meds[j].doses.length; k++) {\n                    if(parseInt(this.props.meds[j].doses[k].hour) === Math.floor(i/2) && parseInt(this.props.meds[j].doses[k].minute) === 30*(i%2)) {\n                        relevant.push(timeLabels[i]);\n                        continue outer;\n                    }\n                }\n            } \n        }\n        return(relevant)\n    }\n    // Needs optimizing, think about sorting etc.\n    summarizeAmounts = (doses) => {\n        let count = [];\n        for(let i = 0; i<doses.length; i++) {\n            let included = false;\n            for(let j = 0; j<count.length; j++) {\n                if(count[j].amount === doses[i].amount) {\n                    count[j].total++;\n                }\n            }\n            if(included === false) {\n                count.push({amount: doses[i].amount, total: 1});\n            }\n\n        }\n\n        var s = \"\";\n\n        for(let i = 0; i<count.length; i++) {\n            if(i > 0) s += \" + \"\n            s += count[i].total + \"x\" + count[i].amount;\n        }\n\n        return s;\n    }\n\n    render() {\n        let timeLabels = this.relevantTimelabels();\n\n        return(<div key={this.props.id}>\n                <table className=\"medication-info\">\n                    <thead>\n                        <tr>\n                            {timeLabels.length > 0 ? <th>Nafn</th> : null}\n                            {timeLabels.length > 0 ? <th>Magn</th> : null}\n                            {timeLabels.map((time) => (<th>{time}</th>))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.meds ? this.props.meds.map((med, i) => {\n                            var k = 0;\n                            return(<tr onClick={() => (this.props.toggleAdd(this.props.meds[i], i))} key={i}>\n                                    <td key={i}>{med.name}</td>\n                                    <td>{this.summarizeAmounts(med.doses)}</td>\n                                    {timeLabels.map((time, j) => {\n                                        let value = \"\";\n                                        console.log(JSON.stringify(this.props.meds[i]));\n                                        let dose = this.props.meds[i].doses[k];\n                                        if (dose && (dose.hour + \":\" + dose.minute) === time) {\n                                            value = this.props.meds[i].doses[k].amount;\n                                            k++;\n                                        }\n                                        return(<td>{value}</td>);\n                                    })}\n                                </tr>);\n                        }) : null}\n                    </tbody>\n                </table>\n            </div>);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {meds: state.meds};\n}\n\nexport default connect(mapStateToProps)(MedsTable);"]},"metadata":{},"sourceType":"module"}