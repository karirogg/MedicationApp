{"ast":null,"code":"var _jsxFileName = \"/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js\";\nimport React, { Component } from 'react';\nimport '../CSS/AddWindow.css';\nimport { addMeds } from '../Actions/add-meds-action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nclass AddWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      doses: [{\n        amount: \"75mg\",\n        hour: 0,\n        minute: 0\n      }]\n    };\n\n    this.submitMeds = () => {\n      var submit_name = this.refs.name_input.value;\n      var amount_name = this.refs.amount_input.value;\n\n      if (submit_name && amount_name) {\n        this.props.toggle();\n        this.props.addMeds({\n          name: submit_name,\n          amount: amount_name\n        });\n      } else {\n        alert(\"You cannot add empty medication\");\n      }\n    };\n\n    this.addDose = () => {\n      this.setState({\n        doses: [...this.state.doses, {\n          amount: \"\",\n          hour: 0,\n          minute: 0\n        }]\n      });\n    };\n\n    this.setTime = () => {};\n\n    this.hr_up = (dose, i) => {\n      dose.hour++;\n      if (dose.hour > 23) dose.hour = 0;\n      this.setTime(dose, i);\n    };\n\n    this.hr_down = (dose, i) => {\n      dose.hour--;\n      if (dose.hour > 23) dose.hour = 0;\n      this.setTime(dose, i);\n    };\n\n    this.min_up = (dose, i) => {\n      dose.minute += 30;\n\n      if (dose.minute >= 60) {\n        dose.minute = 0;\n        dose.hour++;\n      }\n\n      this.setTime(dose, i);\n    };\n\n    this.min_down = (dose, i) => {\n      dose.minute -= 30;\n\n      if (dose.minute < 0) {\n        dose.hour--;\n        dose.minute = 30;\n      }\n\n      this.setTime(dose, i);\n    };\n\n    this.setTime = (dose, i) => {\n      this.hour_fields[i].current.value = \"04\";\n    };\n\n    this.hour_fields = [];\n    this.minute_fields = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dim-background\",\n      onClick: this.props.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 42\n      }\n    }, \"B\\xE6ta vi\\xF0 lyfjagj\\xF6f\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"name_input\",\n      placeholder: \"Nafn lyfs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"amount_input\",\n      placeholder: \"Amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-dose\",\n      onClick: this.addDose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"N\\xFDr skammtur\"), this.state.doses.map((dose, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"new-dose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"amount\",\n        placeholder: \"Magn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-picker\",\n        \"data-time\": \"00:00\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hour\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hr-up\",\n        onClick: this.hr_up(dose, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        ref: ref => this.hour_fields[i] = ref,\n        className: \"hr\",\n        value: \"00\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hr-down\",\n        onClick: this.hr_down(dose),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"minute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"min-up\",\n        onClick: this.min_up(dose, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        ref: ref => this.minute_fields[i] = ref,\n        className: \"min\",\n        value: \"00\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"min-down\",\n        onClick: this.min_down(dose),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save\",\n      type: \"submit\",\n      onClick: this.submitMeds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Vista\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addMeds: addMeds\n  }, dispatch);\n}\n\nexport default connect(null, matchDispatchToProps)(AddWindow);","map":{"version":3,"sources":["/Users/bollo/Documents/Kari/Forritun/MedicationApp/src/Components/AddWindow.js"],"names":["React","Component","addMeds","bindActionCreators","connect","AddWindow","constructor","state","doses","amount","hour","minute","submitMeds","submit_name","refs","name_input","value","amount_name","amount_input","props","toggle","name","alert","addDose","setState","setTime","hr_up","dose","i","hr_down","min_up","min_down","hour_fields","current","minute_fields","render","map","ref","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../CSS/AddWindow.css';\nimport {addMeds} from '../Actions/add-meds-action';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nclass AddWindow extends Component {\n    constructor() {\n        super();\n\n        this.hour_fields = [];\n        this.minute_fields = [];\n    }\n\n    state = {\n        doses:[{amount: \"75mg\", hour:0, minute:0}]\n    };\n\n    submitMeds = () => {\n        var submit_name = this.refs.name_input.value;\n        var amount_name = this.refs.amount_input.value;\n\n        if(submit_name && amount_name) {\n            this.props.toggle();\n            this.props.addMeds({                    \n                name: submit_name,                \n                amount: amount_name,\n            });\n        } else {\n            alert(\"You cannot add empty medication\");\n        }\n    }\n    addDose = () => {\n        this.setState({doses: [...this.state.doses, {amount:\"\", hour:0, minute:0}]});\n    }\n\n    setTime = () => {\n\n    }\n\n    hr_up = (dose, i) => {\n        dose.hour++;\n        if(dose.hour > 23) dose.hour = 0;\n        this.setTime(dose, i);\n    }\n    hr_down = (dose, i) => {\n        dose.hour--;\n        if(dose.hour > 23) dose.hour = 0;\n        this.setTime(dose, i);\n    }\n    min_up = (dose, i) => {\n        dose.minute += 30;\n        if(dose.minute >= 60) {\n            dose.minute = 0;\n            dose.hour++;\n        }\n        this.setTime(dose, i);\n    }\n    min_down = (dose, i) => {\n        dose.minute -= 30;\n        if(dose.minute < 0) {\n            dose.hour--;\n            dose.minute = 30;\n        }\n        this.setTime(dose, i);\n    }\n\n    setTime = (dose, i) => {\n        this.hour_fields[i].current.value=\"04\";\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='dim-background' onClick={this.props.toggle}></div>\n                <div className='add-window'>\n                    <div className=\"top\"><p>Bæta við lyfjagjöf</p></div>\n                    <input type=\"text\" ref=\"name_input\" placeholder=\"Nafn lyfs\" />\n                    <input type=\"text\" ref=\"amount_input\" placeholder=\"Amount\" />\n                    <button className=\"add-dose\" onClick={this.addDose}>Nýr skammtur</button>\n                    {this.state.doses.map((dose, i) => {\n                        return(<div className=\"new-dose\">\n                            <input type=\"text\" className=\"amount\" placeholder=\"Magn\" />\n                            <div className=\"time-picker\" data-time=\"00:00\">\n                                <div className=\"hour\">\n                                    <div className=\"hr-up\" onClick={this.hr_up(dose, i)} />\n                                    <input type=\"number\" ref={(ref) => this.hour_fields[i] = ref} className=\"hr\" value=\"00\" />\n                                    <div className=\"hr-down\" onClick={this.hr_down(dose)}/>\n                                </div>\n                                <div className=\"separator\">:</div>\n                                <div className=\"minute\">\n                                    <div className=\"min-up\" onClick={this.min_up(dose, i)}/>\n                                    <input type=\"number\" ref={(ref) => this.minute_fields[i] = ref} className=\"min\" value=\"00\" />\n                                    <div className=\"min-down\" onClick={this.min_down(dose)} />\n                                </div>\n                            </div>\n                        </div>);\n                    })}\n                    <button className=\"save\" type=\"submit\" onClick={this.submitMeds}>Vista</button>\n                    <p className=\"error_message\"></p>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction matchDispatchToProps(dispatch) {\n    return bindActionCreators({addMeds: addMeds}, dispatch);\n}\n\n\nexport default connect(null, matchDispatchToProps)(AddWindow);"]},"metadata":{},"sourceType":"module"}